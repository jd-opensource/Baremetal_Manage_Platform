// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// RVolumeRaid Volume RAID 关联关系表
//
// swagger:model RVolumeRaid
type RVolumeRaid struct {

	// created by
	CreatedBy string `json:"createdBy,omitempty"`

	// created time
	CreatedTime int64 `json:"createdTime,omitempty"`

	// deleted time
	DeletedTime int64 `json:"deletedTime,omitempty"`

	// device type ID
	DeviceTypeID string `json:"deviceTypeId,omitempty"`

	// is del
	IsDel int8 `json:"isDel,omitempty"`

	// raid can
	RaidCan string `json:"raidCan,omitempty"`

	// raid ID
	RaidID string `json:"raidId,omitempty"`

	// raid name
	RaidName string `json:"raidName,omitempty"`

	// updated by
	UpdatedBy string `json:"updatedBy,omitempty"`

	// updated time
	UpdatedTime int64 `json:"updatedTime,omitempty"`

	// volume ID
	VolumeID string `json:"volumeId,omitempty"`
}

// Validate validates this r volume raid
func (m *RVolumeRaid) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this r volume raid based on context it is used
func (m *RVolumeRaid) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *RVolumeRaid) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RVolumeRaid) UnmarshalBinary(b []byte) error {
	var res RVolumeRaid
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
