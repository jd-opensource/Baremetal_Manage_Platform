// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AssociateImageRequest associate image request
//
// swagger:model AssociateImageRequest
type AssociateImageRequest struct {

	// 设备类型id
	// Required: true
	DeviceTypeID *string `json:"deviceTypeId"`

	// 镜像ID，数组，支持多个
	// Required: true
	ImageIDs []string `json:"imageIds"`
}

// Validate validates this associate image request
func (m *AssociateImageRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDeviceTypeID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateImageIDs(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AssociateImageRequest) validateDeviceTypeID(formats strfmt.Registry) error {

	if err := validate.Required("deviceTypeId", "body", m.DeviceTypeID); err != nil {
		return err
	}

	return nil
}

func (m *AssociateImageRequest) validateImageIDs(formats strfmt.Registry) error {

	if err := validate.Required("imageIds", "body", m.ImageIDs); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this associate image request based on context it is used
func (m *AssociateImageRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AssociateImageRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AssociateImageRequest) UnmarshalBinary(b []byte) error {
	var res AssociateImageRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
