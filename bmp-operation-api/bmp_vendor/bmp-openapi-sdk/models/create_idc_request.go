// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CreateIdcRequest create idc request
//
// swagger:model CreateIdcRequest
type CreateIdcRequest struct {

	// 机房地址 0-256
	Address string `json:"address,omitempty"`

	// 带外密码 0-64
	IloPassword string `json:"iloPassword,omitempty"`

	// 带外用户名 0-64
	IloUser string `json:"iloUser,omitempty"`

	// 机房等级 1-64
	// Required: true
	Level *string `json:"level"`

	// 机房名称 1-64
	// Required: true
	Name *string `json:"name"`

	// 机房英文名称 1-64
	// Required: true
	NameEn *string `json:"nameEn"`

	// 机房缩写 1-64
	// Required: true
	Shortname *string `json:"shortname"`

	// 交换机密码1 0-64
	SwitchPassword1 string `json:"switchPassword1,omitempty"`

	// 交换机密码2 0-64
	SwitchPassword2 string `json:"switchPassword2,omitempty"`

	// 交换机用户1 0-64
	SwitchUser1 string `json:"switchUser1,omitempty"`

	// 交换机用户2 0-64
	SwitchUser2 string `json:"switchUser2,omitempty"`
}

// Validate validates this create idc request
func (m *CreateIdcRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLevel(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNameEn(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateShortname(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CreateIdcRequest) validateLevel(formats strfmt.Registry) error {

	if err := validate.Required("level", "body", m.Level); err != nil {
		return err
	}

	return nil
}

func (m *CreateIdcRequest) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	return nil
}

func (m *CreateIdcRequest) validateNameEn(formats strfmt.Registry) error {

	if err := validate.Required("nameEn", "body", m.NameEn); err != nil {
		return err
	}

	return nil
}

func (m *CreateIdcRequest) validateShortname(formats strfmt.Registry) error {

	if err := validate.Required("shortname", "body", m.Shortname); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this create idc request based on context it is used
func (m *CreateIdcRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CreateIdcRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CreateIdcRequest) UnmarshalBinary(b []byte) error {
	var res CreateIdcRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
