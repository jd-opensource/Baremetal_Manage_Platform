// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// VolumeItem volume item
//
// swagger:model VolumeItem
type VolumeItem struct {

	// device type ID
	DeviceTypeID string `json:"deviceTypeId,omitempty"`

	// disk type
	DiskType string `json:"diskType,omitempty"`

	// interface type
	InterfaceType string `json:"interfaceType,omitempty"`

	// raid
	Raid string `json:"raid,omitempty"`

	// raid can
	RaidCan string `json:"raidCan,omitempty"`

	// volume amount
	VolumeAmount int64 `json:"volumeAmount,omitempty"`

	// volume name
	VolumeName string `json:"volumeName,omitempty"`

	// volume size
	VolumeSize string `json:"volumeSize,omitempty"`

	// volume type
	VolumeType string `json:"volumeType,omitempty"`

	// volume unit
	VolumeUnit string `json:"volumeUnit,omitempty"`
}

// Validate validates this volume item
func (m *VolumeItem) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this volume item based on context it is used
func (m *VolumeItem) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *VolumeItem) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *VolumeItem) UnmarshalBinary(b []byte) error {
	var res VolumeItem
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
