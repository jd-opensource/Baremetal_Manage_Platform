// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CreateRoleRequest create role request
//
// swagger:model CreateRoleRequest
type CreateRoleRequest struct {

	// 角色描述中文名称
	// Required: true
	DescriptionCn *string `json:"descriptionCn"`

	// 角色描述英文名称
	// Required: true
	DescriptionEn *string `json:"descriptionEn"`

	// 角色中文名称
	// Required: true
	RoleNameCn *string `json:"roleNameCn"`

	// 角色英文名称
	// Required: true
	RoleNameEn *string `json:"roleNameEn"`
}

// Validate validates this create role request
func (m *CreateRoleRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDescriptionCn(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDescriptionEn(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRoleNameCn(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRoleNameEn(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CreateRoleRequest) validateDescriptionCn(formats strfmt.Registry) error {

	if err := validate.Required("descriptionCn", "body", m.DescriptionCn); err != nil {
		return err
	}

	return nil
}

func (m *CreateRoleRequest) validateDescriptionEn(formats strfmt.Registry) error {

	if err := validate.Required("descriptionEn", "body", m.DescriptionEn); err != nil {
		return err
	}

	return nil
}

func (m *CreateRoleRequest) validateRoleNameCn(formats strfmt.Registry) error {

	if err := validate.Required("roleNameCn", "body", m.RoleNameCn); err != nil {
		return err
	}

	return nil
}

func (m *CreateRoleRequest) validateRoleNameEn(formats strfmt.Registry) error {

	if err := validate.Required("roleNameEn", "body", m.RoleNameEn); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this create role request based on context it is used
func (m *CreateRoleRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CreateRoleRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CreateRoleRequest) UnmarshalBinary(b []byte) error {
	var res CreateRoleRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
