// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// AuditLog audit log
//
// swagger:model AuditLog
type AuditLog struct {

	// device_id
	DeviceID string `json:"deviceId,omitempty"`

	// 失败原因
	FailReason string `json:"failReason,omitempty"`

	// 完成时间
	FinishTime int64 `json:"finishTime,omitempty"`

	// ID
	ID int64 `json:"id,omitempty"`

	// instance_id
	InstanceID string `json:"instanceId,omitempty"`

	// 日志uuid
	LogID string `json:"logid,omitempty"`

	// 操作时间
	OperateTime int64 `json:"operateTime,omitempty"`

	// 操作
	Operation string `json:"operation,omitempty"`

	// 操作名称
	OperationName string `json:"operationName,omitempty"`

	// 结果 success/fail
	Result string `json:"result,omitempty"`

	// sn
	Sn string `json:"sn,omitempty"`

	// 操作人
	UserID string `json:"userID,omitempty"`

	// 操作人
	UserName string `json:"userName,omitempty"`
}

// Validate validates this audit log
func (m *AuditLog) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this audit log based on context it is used
func (m *AuditLog) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AuditLog) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AuditLog) UnmarshalBinary(b []byte) error {
	var res AuditLog
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
