// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// Message message
//
// swagger:model Message
type Message struct {

	// 告警次数,始终为1，带外故障消息专属字段
	AlertCount int64 `json:"alert_count,omitempty"`

	// 故障告警时间，带外故障消息专属字段
	AlertTime int64 `json:"alert_time,omitempty"`

	// 故障内容，带外故障消息专属字段
	Content string `json:"content,omitempty"`

	// 详情, 带外监控日志的详情请用content
	Detail string `json:"detail,omitempty"`

	// device ID
	DeviceID string `json:"device_id,omitempty"`

	// 故障类型, 带外故障消息专属字段
	FaultType string `json:"fault_type,omitempty"`

	// 消息时间戳
	FinishTime int64 `json:"finish_time,omitempty"`

	// 0未读, 1已读
	HasRead int8 `json:"has_read,omitempty"`

	// 独一处的下划线，跟sdk一致
	IDcID string `json:"idc_id,omitempty"`

	// i dc name
	IDcName string `json:"idc_name,omitempty"`

	// 实例id
	InstanceID string `json:"instance_id,omitempty"`

	// 实例name
	InstanceName string `json:"instance_name,omitempty"`

	// 是否删除0未删除 1已删除
	IsDel int8 `json:"is_del,omitempty"`

	// 版本名称, 许可证到期消息专属字段
	LicenseName string `json:"license_name,omitempty"`

	// 版本号, 许可证到期消息专属字段
	LicenseNumber string `json:"license_number,omitempty"`

	// 结束时间, 许可证到期消息专属字段
	LienseEndTime int64 `json:"license_end_time,omitempty"`

	// 开始时间, 许可证到期消息专属字段
	LienseStartTime int64 `json:"license_start_time,omitempty"`

	// 系统原始日志id, 带外故障消息专属字段
	LogID string `json:"logid,omitempty"`

	// message uuid
	MessageID string `json:"message_id,omitempty"`

	// 消息子类型
	MessageSubType string `json:"message_sub_type,omitempty"`

	// 消息类型
	MessageType string `json:"message_type,omitempty"`

	// project ID
	ProjectID string `json:"project_id,omitempty"`

	// project name
	ProjectName string `json:"project_name,omitempty"`

	// 资源类型 实例/设备
	ResourceType string `json:"resource_type,omitempty"`

	// 操作结果 fail/succ
	Result string `json:"result,omitempty"`

	// inbond rule uuid
	RuleID string `json:"rule_id,omitempty"`

	// inbond rule name
	RuleName string `json:"rule_name,omitempty"`

	// 设备sn
	SN string `json:"sn,omitempty"`

	// user_id
	UserID string `json:"user_id,omitempty"`

	// user_name
	UserName string `json:"user_name,omitempty"`
}

// Validate validates this message
func (m *Message) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this message based on context it is used
func (m *Message) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Message) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Message) UnmarshalBinary(b []byte) error {
	var res Message
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
