// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// Os os
//
// swagger:model Os
type Os struct {

	// 架构:x86/x64/i386/
	Architecture string `json:"architecture,omitempty"`

	// 指令宽度:64/32位
	Bits int64 `json:"bits,omitempty"`

	// 创建者
	CreatedBy string `json:"createdBy,omitempty"`

	// 创建时间
	CreatedTime string `json:"createdTime,omitempty"`

	// 删除时间
	DeletedTime string `json:"deletedTime,omitempty"`

	// ID
	ID uint64 `json:"id,omitempty"`

	// 是否删除0未删除 1已删除
	IsDel int8 `json:"isDel,omitempty"`

	// 操作系统uuid
	OsID string `json:"osId,omitempty"`

	// 操作系统名称
	OsName string `json:"osName,omitempty"`

	// 操作系统分类:linux/windows
	OsType string `json:"osType,omitempty"`

	// 操作系统版本
	OsVersion string `json:"osVersion,omitempty"`

	// 管理员账户
	SysUser string `json:"sysUser,omitempty"`

	// 更新者
	UpdatedBy string `json:"updatedBy,omitempty"`

	// 更新时间
	UpdatedTime string `json:"updatedTime,omitempty"`
}

// Validate validates this os
func (m *Os) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this os based on context it is used
func (m *Os) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Os) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Os) UnmarshalBinary(b []byte) error {
	var res Os
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
